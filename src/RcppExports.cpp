// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// INNC
NumericVector INNC(List dlist, int n, int d);
RcppExport SEXP _INN_INNC(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(INNC(dlist, n, d));
    return rcpp_result_gen;
END_RCPP
}
// INNS
NumericVector INNS(List dlist, int n, int d);
RcppExport SEXP _INN_INNS(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(INNS(dlist, n, d));
    return rcpp_result_gen;
END_RCPP
}
// INNCtest
List INNCtest(List dlist, int n, int d, int REP);
RcppExport SEXP _INN_INNCtest(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP, SEXP REPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type REP(REPSEXP);
    rcpp_result_gen = Rcpp::wrap(INNCtest(dlist, n, d, REP));
    return rcpp_result_gen;
END_RCPP
}
// INNStest
List INNStest(List dlist, int n, int d, int REP);
RcppExport SEXP _INN_INNStest(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP, SEXP REPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type REP(REPSEXP);
    rcpp_result_gen = Rcpp::wrap(INNStest(dlist, n, d, REP));
    return rcpp_result_gen;
END_RCPP
}
// INN2
NumericVector INN2(List dlist, List dlistm, int n, int d);
RcppExport SEXP _INN_INN2(SEXP dlistSEXP, SEXP dlistmSEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< List >::type dlistm(dlistmSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(INN2(dlist, dlistm, n, d));
    return rcpp_result_gen;
END_RCPP
}
// INN2test
List INN2test(List dlist, int n, int d, int REP);
RcppExport SEXP _INN_INN2test(SEXP dlistSEXP, SEXP nSEXP, SEXP dSEXP, SEXP REPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dlist(dlistSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type REP(REPSEXP);
    rcpp_result_gen = Rcpp::wrap(INN2test(dlist, n, d, REP));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_INN_INNC", (DL_FUNC) &_INN_INNC, 3},
    {"_INN_INNS", (DL_FUNC) &_INN_INNS, 3},
    {"_INN_INNCtest", (DL_FUNC) &_INN_INNCtest, 4},
    {"_INN_INNStest", (DL_FUNC) &_INN_INNStest, 4},
    {"_INN_INN2", (DL_FUNC) &_INN_INN2, 4},
    {"_INN_INN2test", (DL_FUNC) &_INN_INN2test, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_INN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
